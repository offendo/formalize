apiVersion: batch/v1
kind: Job
metadata:
  name: nilay-formalize-inference
spec:
  template:
    spec:
      imagePullSecrets:
        - name: nilay-ghcr-key
      shareProcessNamespace: true
      containers:
        - name: train
          image: ghcr.io/offendo/formalize:latest
          command: ["bash", "run_pipeline.sh"]
          workingDir: /app/formalize
          env:
            - name: SKIP_TRAIN
              value: "true"
            - name: SKIP_VERIFY
              value: "true"
            - name: MODEL
              value: "FrenzyMath/Herald_translator"
            - name: HERALD_OUTPUT
              value: /volume/autoformalization/herald_base_output.json
            - name: ALIGN_INPUT
              value: /volume/autoformalization/herald_base_output.json
            - name: ALIGN_OUTPUT
              value: /volume/autoformalization/herald_base_aligned.json
            - name: ALIGN_BATCH_SIZE
              value: "4"
            - name: NUM_SAMPLES
              value: "-1"
            - name: GENERATIONS
              value: "8"
            - name: TEMPERATURE
              value: "1.0"
            - name: TOP_P
              value: "0.95"
            - name: VERIFY_NUM_SAMPLES
              value: "-1"
          volumeMounts:
            - name: git-repo
              mountPath: /app
            - name: nilay-data-volume-rwm
              mountPath: /volume
            - name: api-tokens
              mountPath: /etc/api-tokens
            - name: dshm
              mountPath: /dev/shm
          resources:
            limits:
              memory: 256Gi
              cpu: 4
              #nvidia.com/gpu: "2"
              nvidia.com/a100: "1"
              ephemeral-storage: 50Gi
            requests:
              memory: 256Gi
              cpu: 4
              #nvidia.com/gpu: "2"
              nvidia.com/a100: "1"
              ephemeral-storage: 50Gi
              # - name: verifier
              #   image: projectnumina/kimina-lean-server:1.0.0
              #   env:
              #     - name: "LEANSERVER_MAX_REPLS"
              #       value: "32"
              #   volumeMounts:
              #     - mountPath: /dev/shm
              #       name: dshm
              #     - name: nilay-data-volume-rwm
              #       mountPath: /volume
              #     - name: api-tokens
              #       mountPath: /etc/api-tokens
              #   resources:
              #     limits:
              #       memory: 128Gi
              #       cpu: 32
              #     requests:
              #       memory: 128Gi
              #       cpu: 32
      initContainers:
        - name: git-sync
          image: registry.k8s.io/git-sync/git-sync:v4.1.0
          args:
            - "--repo=git@github.com:offendo/formalize"
            - "--depth=1"
            - "--one-time"
            - "--root=/git"
          resources:
            limits:
              memory: 4Gi
              cpu: 1
            requests:
              memory: 4Gi
              cpu: 1
          volumeMounts:
            - name: git-repo
              mountPath: /git
            - name: git-secret
              mountPath: /etc/git-secret
        - name: chmod
          image: alpine:latest
          command: ["chmod", "a+rw", "/volume/"]
          resources:
            limits:
              memory: 4Gi
              cpu: 1
            requests:
              memory: 4Gi
              cpu: 1
          volumeMounts:
            - name: nilay-data-volume-rwm
              mountPath: /volume
      securityContext:
        fsGroup: 101
      volumes:
        - name: git-repo
          emptyDir: {}
        - name: nilay-data-volume-rwm
          persistentVolumeClaim:
            claimName: nilay-data-volume-rwm
        - name: git-secret
          secret:
            defaultMode: 0400
            secretName: nilay-git-creds
        - name: api-tokens
          secret:
            defaultMode: 0400
            secretName: nilay-api-tokens
        - name: dshm
          emptyDir:
            medium: Memory
      restartPolicy: Never
  backoffLimit: 0
